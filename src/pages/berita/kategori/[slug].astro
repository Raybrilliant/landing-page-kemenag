---
import HorizontalNews from "@/components/berita/HorizontalNews.astro";
import { ItemPagination } from "@/components/ItemPagination";
import NewsLayout from "@/layouts/NewsLayout.astro";
import pb from "@/lib/database";

const { slug } = Astro.params;
const {searchParams} = new URL(Astro.url.href);
const page = Number(searchParams.get("page")) || 1;
const categories = await pb.collection("news").getList(page, 12, {expand: "category", sort: "-created", filter: `category.name = '${slug}'`})
const category = categories.items[0]

if (!category) {
    throw new Error("Category not found");
}

function getPageUrl(page: number) {
  const url = new URL(Astro.url.href);
  url.hash = "";
  url.searchParams.set("page", page.toString());
  // kembalikan relatif supaya aman di server & client
  return url.pathname + url.search;
}
---

<NewsLayout title={category.expand?.category?.name}>
    <section class="mt-5 mx-20 max-sm:mx-10">
         <div class="flex items-center justify-between mb-5">
			 <h1 class="text-2xl font-semibold">{category.expand?.category?.name}</h1>
             <p class="text-sm text-gray-500">{categories.totalItems} Berita</p>
		 </div>
		 <div class="grid grid-cols-4 max-sm:grid-cols-1 gap-5 mb-20">
			 {categories.items.map((item) => (
				<HorizontalNews title={item.title} date={item.created} category={item.expand?.category?.name} image={pb.files.getURL(item, item.document)} description={item.content} slug={item.slug} />
			 ))}
		 </div>
    </section>
    <ItemPagination page={page} totalPage={categories.totalPages} getPageUrl={getPageUrl} onPageChange={(newPage) => window.location.href = getPageUrl(newPage)} />
</NewsLayout>